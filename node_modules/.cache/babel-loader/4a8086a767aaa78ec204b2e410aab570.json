{"ast":null,"code":"'use strict';\n\nmodule.exports = maxscript;\nmaxscript.displayName = 'maxscript';\nmaxscript.aliases = [];\n\nfunction maxscript(Prism) {\n  Prism.languages.maxscript = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    path: {\n      pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n      greedy: true,\n      alias: 'string'\n    },\n    'function-definition': {\n      pattern: /(\\b(?:function|fn)\\s+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      pattern: /\\b[a-z_]\\w*(?=:)/i,\n      alias: 'attr-name'\n    },\n    keyword: /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i,\n    boolean: /\\b(?:true|false|on|off)\\b/,\n    time: {\n      pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    number: [{\n      pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n      lookbehind: true\n    }, /\\b(?:e|pi)\\b/],\n    constant: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/,\n    color: {\n      pattern: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/i,\n      alias: 'constant'\n    },\n    operator: /[-+*/<>=!]=?|[&^]|#(?!\\()/,\n    punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n  };\n}","map":{"version":3,"sources":["/home/dkirchan/timikat/node_modules/refractor/lang/maxscript.js"],"names":["module","exports","maxscript","displayName","aliases","Prism","languages","comment","pattern","greedy","string","lookbehind","path","alias","argument","keyword","boolean","time","number","constant","color","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,SAAhB,GAA4B;AAC1BK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,6BADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADiB;AAK1BC,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAE,gDADH;AAENG,MAAAA,UAAU,EAAE,IAFN;AAGNF,MAAAA,MAAM,EAAE;AAHF,KALkB;AAU1BG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,OAAO,EAAE,2BADL;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJI,MAAAA,KAAK,EAAE;AAHH,KAVoB;AAe1B,2BAAuB;AACrBL,MAAAA,OAAO,EAAE,6BADY;AAErBG,MAAAA,UAAU,EAAE,IAFS;AAGrBE,MAAAA,KAAK,EAAE;AAHc,KAfG;AAoB1BC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,OAAO,EAAE,mBADD;AAERK,MAAAA,KAAK,EAAE;AAFC,KApBgB;AAwB1BE,IAAAA,OAAO,EACL,0SAzBwB;AA0B1BC,IAAAA,OAAO,EAAE,2BA1BiB;AA2B1BC,IAAAA,IAAI,EAAE;AACJT,MAAAA,OAAO,EACL,qGAFE;AAGJG,MAAAA,UAAU,EAAE,IAHR;AAIJE,MAAAA,KAAK,EAAE;AAJH,KA3BoB;AAiC1BK,IAAAA,MAAM,EAAE,CACN;AACEV,MAAAA,OAAO,EACL,uFAFJ;AAGEG,MAAAA,UAAU,EAAE;AAHd,KADM,EAMN,cANM,CAjCkB;AAyC1BQ,IAAAA,QAAQ,EAAE,6DAzCgB;AA0C1BC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,OAAO,EAAE,0DADJ;AAELK,MAAAA,KAAK,EAAE;AAFF,KA1CmB;AA8C1BQ,IAAAA,QAAQ,EAAE,2BA9CgB;AA+C1BC,IAAAA,WAAW,EAAE;AA/Ca,GAA5B;AAiDD","sourcesContent":["'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  Prism.languages.maxscript = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    path: {\n      pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n      greedy: true,\n      alias: 'string'\n    },\n    'function-definition': {\n      pattern: /(\\b(?:function|fn)\\s+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      pattern: /\\b[a-z_]\\w*(?=:)/i,\n      alias: 'attr-name'\n    },\n    keyword:\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i,\n    boolean: /\\b(?:true|false|on|off)\\b/,\n    time: {\n      pattern:\n        /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      },\n      /\\b(?:e|pi)\\b/\n    ],\n    constant: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/,\n    color: {\n      pattern: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/i,\n      alias: 'constant'\n    },\n    operator: /[-+*/<>=!]=?|[&^]|#(?!\\()/,\n    punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n  }\n}\n"]},"metadata":{},"sourceType":"script"}