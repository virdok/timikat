{"ast":null,"code":"import _objectSpread from \"/home/dkirchan/timikat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/home/dkirchan/timikat/src/pages/tables/Pagination.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, usePagination } from \"react-table\";\nimport { Card, Container, Table, Pagination, Row, Col, Form } from \"react-bootstrap\";\nimport { tableData, tableColumns } from \"./data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PaginationTable = function PaginationTable(_ref) {\n  _s();\n\n  var columns = _ref.columns,\n      data = _ref.data;\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Pagination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Pagination by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                  children: column.render(\"Header\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: page.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mx-2\",\n            children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [pageIndex + 1, \" of \", pageOptions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-3 me-2\",\n            children: \"Show:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            className: \"d-inline-block w-auto\",\n            value: pageSize,\n            onChange: function onChange(e) {\n              setPageSize(Number(e.target.value));\n            },\n            children: [10, 20, 30, 40, 50].map(function (pageSize) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pageSize,\n                children: pageSize\n              }, pageSize, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-3 me-2\",\n            children: \"Go to page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"d-inline-block\",\n            type: \"number\",\n            defaultValue: pageIndex + 1,\n            onChange: function onChange(e) {\n              var page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            },\n            style: {\n              width: \"75px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            className: \"float-end\",\n            children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n              onClick: function onClick() {\n                return gotoPage(0);\n              },\n              disabled: !canPreviousPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n              onClick: function onClick() {\n                return previousPage();\n              },\n              disabled: !canPreviousPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n              onClick: function onClick() {\n                return nextPage();\n              },\n              disabled: !canNextPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n              onClick: function onClick() {\n                return gotoPage(pageCount - 1);\n              },\n              disabled: !canNextPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PaginationTable, \"TwIyn9tIhjwsiwoD1PKokW899BQ=\", false, function () {\n  return [useTable];\n});\n\n_c = PaginationTable;\n\nvar PaginationPage = function PaginationPage() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Pagination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(PaginationTable, {\n        columns: tableColumns,\n        data: tableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = PaginationPage;\nexport default PaginationPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginationTable\");\n$RefreshReg$(_c2, \"PaginationPage\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/tables/Pagination.js"],"names":["React","Helmet","useTable","usePagination","Card","Container","Table","Pagination","Row","Col","Form","tableData","tableColumns","PaginationTable","columns","data","initialState","pageIndex","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","Number","target","value","width","PaginationPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\nimport {\r\n  Card,\r\n  Container,\r\n  Table,\r\n  Pagination,\r\n  Row,\r\n  Col,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport { tableData, tableColumns } from \"./data.js\";\r\n\r\nconst PaginationTable = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Pagination</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">Pagination by react-table</h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Table striped bordered {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <span className=\"mx-2\">\r\n              Page{\" \"}\r\n              <strong>\r\n                {pageIndex + 1} of {pageOptions.length}\r\n              </strong>\r\n            </span>\r\n            <span className=\"ms-3 me-2\">Show:</span>\r\n            <Form.Select\r\n              className=\"d-inline-block w-auto\"\r\n              value={pageSize}\r\n              onChange={(e) => {\r\n                setPageSize(Number(e.target.value));\r\n              }}\r\n            >\r\n              {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  {pageSize}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n\r\n            <span className=\"ms-3 me-2\">Go to page:</span>\r\n            <Form.Control\r\n              className=\"d-inline-block\"\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              style={{ width: \"75px\" }}\r\n            />\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Pagination className=\"float-end\">\r\n              <Pagination.First\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              />\r\n              <Pagination.Prev\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              />\r\n              <Pagination.Next\r\n                onClick={() => nextPage()}\r\n                disabled={!canNextPage}\r\n              />\r\n              <Pagination.Last\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst PaginationPage = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Pagination\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Pagination</h1>\r\n\r\n      <PaginationTable columns={tableColumns} data={tableData} />\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default PaginationPage;\r\n"]},"metadata":{},"sourceType":"module"}