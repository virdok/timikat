{"ast":null,"code":"'use strict';\n\nmodule.exports = avroIdl;\navroIdl.displayName = 'avroIdl';\navroIdl.aliases = [];\n\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: [{\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\])'(?:[^\\r\\n'\\\\]|\\\\(?:[\\s\\S]|\\d{1,3}))'/,\n      lookbehind: true,\n      greedy: true\n    }],\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [{\n      pattern: /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n      lookbehind: true\n    }, /-?\\b(?:NaN|Infinity)\\b/],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  };\n  Prism.languages.avdl = Prism.languages['avro-idl'];\n}","map":{"version":3,"sources":["/home/dkirchan/timikat/node_modules/refractor/lang/avro-idl.js"],"names":["module","exports","avroIdl","displayName","aliases","Prism","languages","comment","pattern","greedy","string","lookbehind","annotation","alias","identifier","keyword","function","number","operator","punctuation","avdl"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;AACtB;AACA;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgB,UAAhB,IAA8B;AAC5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,yBADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADmB;AAK5BC,IAAAA,MAAM,EAAE,CACN;AACEF,MAAAA,OAAO,EAAE,gCADX;AAEEG,MAAAA,UAAU,EAAE,IAFd;AAGEF,MAAAA,MAAM,EAAE;AAHV,KADM,EAMN;AACED,MAAAA,OAAO,EAAE,gDADX;AAEEG,MAAAA,UAAU,EAAE,IAFd;AAGEF,MAAAA,MAAM,EAAE;AAHV,KANM,CALoB;AAiB5BG,IAAAA,UAAU,EAAE;AACVJ,MAAAA,OAAO,EAAE,2BADC;AAEVC,MAAAA,MAAM,EAAE,IAFE;AAGVI,MAAAA,KAAK,EAAE;AAHG,KAjBgB;AAsB5B,2BAAuB;AACrBL,MAAAA,OAAO,EAAE,sBADY;AAErBC,MAAAA,MAAM,EAAE,IAFa;AAGrBI,MAAAA,KAAK,EAAE;AAHc,KAtBK;AA2B5BC,IAAAA,UAAU,EAAE;AACVN,MAAAA,OAAO,EAAE,aADC;AAEVC,MAAAA,MAAM,EAAE;AAFE,KA3BgB;AA+B5B,kBAAc;AACZD,MAAAA,OAAO,EAAE,sDADG;AAEZG,MAAAA,UAAU,EAAE,IAFA;AAGZF,MAAAA,MAAM,EAAE;AAHI,KA/Bc;AAoC5BM,IAAAA,OAAO,EACL,oNArC0B;AAsC5BC,IAAAA,QAAQ,EAAE,uBAtCkB;AAuC5BC,IAAAA,MAAM,EAAE,CACN;AACET,MAAAA,OAAO,EACL,iIAFJ;AAGEG,MAAAA,UAAU,EAAE;AAHd,KADM,EAMN,wBANM,CAvCoB;AA+C5BO,IAAAA,QAAQ,EAAE,GA/CkB;AAgD5BC,IAAAA,WAAW,EAAE;AAhDe,GAA9B;AAkDAd,EAAAA,KAAK,CAACC,SAAN,CAAgBc,IAAhB,GAAuBf,KAAK,CAACC,SAAN,CAAgB,UAAhB,CAAvB;AACD","sourcesContent":["'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\])'(?:[^\\r\\n'\\\\]|\\\\(?:[\\s\\S]|\\d{1,3}))'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:NaN|Infinity)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n"]},"metadata":{},"sourceType":"script"}