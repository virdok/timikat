{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/pages/charts/ApexCharts/Column.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport usePalette from \"../../../hooks/usePalette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ColumnChart = function ColumnChart() {\n  _s();\n\n  var palette = usePalette();\n  var data = [{\n    name: \"Net Profit\",\n    data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n  }, {\n    name: \"Revenue\",\n    data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n  }, {\n    name: \"Free Cash Flow\",\n    data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n  }];\n  var options = {\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        endingShape: \"rounded\",\n        columnWidth: \"55%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"]\n    },\n    xaxis: {\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"]\n    },\n    yaxis: {\n      title: {\n        text: \"$ (thousands)\"\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function formatter(val) {\n          return \"$ \" + val + \" thousands\";\n        }\n      }\n    },\n    colors: [palette.primary, palette.success, palette.warning, palette.danger, palette.info]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Column Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"A column chart uses vertical bars to display data and is used to compare values across categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: data,\n          type: \"bar\",\n          height: \"350\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ColumnChart, \"vz5tnxfrp3wb9HNfCJyLip3ixLc=\", false, function () {\n  return [usePalette];\n});\n\n_c = ColumnChart;\nexport default ColumnChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/charts/ApexCharts/Column.js"],"names":["React","Chart","Card","usePalette","ColumnChart","palette","data","name","options","plotOptions","bar","horizontal","endingShape","columnWidth","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","primary","success","warning","danger","info"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport usePalette from \"../../../hooks/usePalette\";\r\n\r\nconst ColumnChart = () => {\r\n  const palette = usePalette();\r\n\r\n  const data = [\r\n    {\r\n      name: \"Net Profit\",\r\n      data: [44, 55, 57, 56, 61, 58, 63, 60, 66],\r\n    },\r\n    {\r\n      name: \"Revenue\",\r\n      data: [76, 85, 101, 98, 87, 105, 91, 114, 94],\r\n    },\r\n    {\r\n      name: \"Free Cash Flow\",\r\n      data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        endingShape: \"rounded\",\r\n        columnWidth: \"55%\",\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 2,\r\n      colors: [\"transparent\"],\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n      ],\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: \"$ (thousands)\",\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return \"$ \" + val + \" thousands\";\r\n        },\r\n      },\r\n    },\r\n    colors: [\r\n      palette.primary,\r\n      palette.success,\r\n      palette.warning,\r\n      palette.danger,\r\n      palette.info,\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Column Chart</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          A column chart uses vertical bars to display data and is used to\r\n          compare values across categories.\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <div className=\"chart\">\r\n          <Chart options={options} series={data} type=\"bar\" height=\"350\" />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ColumnChart;\r\n"]},"metadata":{},"sourceType":"module"}