{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/pages/maps/GoogleMaps/Markers.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport GoogleMapReact from \"google-map-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Markers = function Markers() {\n  var getMapOptions = function getMapOptions(maps) {\n    return {\n      fullscreenControl: true,\n      mapTypeControl: true,\n      mapTypeId: maps.MapTypeId.ROADMAP,\n      scaleControl: true,\n      scrollwheel: false,\n      streetViewControl: true\n    };\n  };\n\n  var renderMarkers = function renderMarkers(map, maps) {\n    new maps.Marker({\n      position: {\n        lat: 40.712784,\n        lng: -74.005941\n      },\n      map: map,\n      title: \"Hello World!\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Markers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Identify a location on a map.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          options: getMapOptions,\n          bootstrapURLKeys: {\n            key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\n          },\n          defaultCenter: {\n            lat: 40.712784,\n            lng: -74.005941\n          },\n          defaultZoom: 14,\n          onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n            var map = _ref.map,\n                maps = _ref.maps;\n            return renderMarkers(map, maps);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Markers;\nexport default Markers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Markers\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/maps/GoogleMaps/Markers.js"],"names":["React","Card","GoogleMapReact","Markers","getMapOptions","maps","fullscreenControl","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","scaleControl","scrollwheel","streetViewControl","renderMarkers","map","Marker","position","lat","lng","title","height","width","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,WAAO;AACLC,MAAAA,iBAAiB,EAAE,IADd;AAELC,MAAAA,cAAc,EAAE,IAFX;AAGLC,MAAAA,SAAS,EAAEH,IAAI,CAACI,SAAL,CAAeC,OAHrB;AAILC,MAAAA,YAAY,EAAE,IAJT;AAKLC,MAAAA,WAAW,EAAE,KALR;AAMLC,MAAAA,iBAAiB,EAAE;AANd,KAAP;AAQD,GATD;;AAWA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMV,IAAN,EAAe;AACnC,QAAIA,IAAI,CAACW,MAAT,CAAgB;AACdC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,GAAG,EAAE,CAAC;AAFE,OADI;AAKdJ,MAAAA,GAAG,EAAHA,GALc;AAMdK,MAAAA,KAAK,EAAE;AANO,KAAhB;AAQD,GATD;;AAWA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAAZ;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,OAAO,EAAElB,aADX;AAEE,UAAA,gBAAgB,EAAE;AAChBmB,YAAAA,GAAG,EAAE;AADW,WAFpB;AAKE,UAAA,aAAa,EAAE;AACbL,YAAAA,GAAG,EAAE,SADQ;AAEbC,YAAAA,GAAG,EAAE,CAAC;AAFO,WALjB;AASE,UAAA,WAAW,EAAE,EATf;AAUE,UAAA,iBAAiB,EAAE;AAAA,gBAAGJ,GAAH,QAAGA,GAAH;AAAA,gBAAQV,IAAR,QAAQA,IAAR;AAAA,mBAAmBS,aAAa,CAACC,GAAD,EAAMV,IAAN,CAAhC;AAAA;AAVrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CAjDD;;KAAMF,O;AAmDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Markers = () => {\r\n  const getMapOptions = (maps) => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n    };\r\n  };\r\n\r\n  const renderMarkers = (map, maps) => {\r\n    new maps.Marker({\r\n      position: {\r\n        lat: 40.712784,\r\n        lng: -74.005941,\r\n      },\r\n      map,\r\n      title: \"Hello World!\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Markers</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Identify a location on a map.\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\",\r\n            }}\r\n            defaultCenter={{\r\n              lat: 40.712784,\r\n              lng: -74.005941,\r\n            }}\r\n            defaultZoom={14}\r\n            onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n          />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Markers;\r\n"]},"metadata":{},"sourceType":"module"}