{"ast":null,"code":"import _slicedToArray from \"/home/dkirchan/timikat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/dkirchan/timikat/src/contexts/SidebarContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SIDEBAR_POSITION, SIDEBAR_BEHAVIOR } from \"../constants\";\nimport useSettingsState from \"../hooks/useSettingsState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initialState = {\n  isOpen: true,\n  position: SIDEBAR_POSITION.LEFT,\n  behavior: SIDEBAR_BEHAVIOR.STICKY\n};\nvar SidebarContext = /*#__PURE__*/React.createContext(initialState);\n\nfunction SidebarProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useSettingsState = useSettingsState(\"sidebarPosition\", SIDEBAR_POSITION.LEFT),\n      _useSettingsState2 = _slicedToArray(_useSettingsState, 2),\n      position = _useSettingsState2[0],\n      setPosition = _useSettingsState2[1];\n\n  var _useSettingsState3 = useSettingsState(\"sidebarBehavior\", SIDEBAR_BEHAVIOR.STICKY),\n      _useSettingsState4 = _slicedToArray(_useSettingsState3, 2),\n      behavior = _useSettingsState4[0],\n      setBehavior = _useSettingsState4[1];\n\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen,\n      position: position,\n      setPosition: setPosition,\n      behavior: behavior,\n      setBehavior: setBehavior\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidebarProvider, \"GurfjiYIBT8oH2kUpueuoBXDW/Y=\", false, function () {\n  return [useSettingsState, useSettingsState];\n});\n\n_c = SidebarProvider;\nexport { SidebarProvider, SidebarContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/contexts/SidebarContext.js"],"names":["React","useState","SIDEBAR_POSITION","SIDEBAR_BEHAVIOR","useSettingsState","initialState","isOpen","position","LEFT","behavior","STICKY","SidebarContext","createContext","SidebarProvider","children","setIsOpen","setPosition","setBehavior"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,cAAnD;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,QAAQ,EAAEL,gBAAgB,CAACM,IAFR;AAGnBC,EAAAA,QAAQ,EAAEN,gBAAgB,CAACO;AAHR,CAArB;AAMA,IAAMC,cAAc,gBAAGX,KAAK,CAACY,aAAN,CAAoBP,YAApB,CAAvB;;AAEA,SAASQ,eAAT,OAAuC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACrC,kBAA4Bb,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeS,SAAf;;AACA,0BAAgCX,gBAAgB,CAC9C,iBAD8C,EAE9CF,gBAAgB,CAACM,IAF6B,CAAhD;AAAA;AAAA,MAAOD,QAAP;AAAA,MAAiBS,WAAjB;;AAIA,2BAAgCZ,gBAAgB,CAC9C,iBAD8C,EAE9CD,gBAAgB,CAACO,MAF6B,CAAhD;AAAA;AAAA,MAAOD,QAAP;AAAA,MAAiBQ,WAAjB;;AAKA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,MAAM,EAANA,MADK;AAELS,MAAAA,SAAS,EAATA,SAFK;AAGLR,MAAAA,QAAQ,EAARA,QAHK;AAILS,MAAAA,WAAW,EAAXA,WAJK;AAKLP,MAAAA,QAAQ,EAARA,QALK;AAMLQ,MAAAA,WAAW,EAAXA;AANK,KADT;AAAA,cAUGH;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzBQD,e;UAEyBT,gB,EAIAA,gB;;;KANzBS,e;AA2BT,SAASA,eAAT,EAA0BF,cAA1B","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { SIDEBAR_POSITION, SIDEBAR_BEHAVIOR } from \"../constants\";\r\nimport useSettingsState from \"../hooks/useSettingsState\";\r\n\r\nconst initialState = {\r\n  isOpen: true,\r\n  position: SIDEBAR_POSITION.LEFT,\r\n  behavior: SIDEBAR_BEHAVIOR.STICKY,\r\n};\r\n\r\nconst SidebarContext = React.createContext(initialState);\r\n\r\nfunction SidebarProvider({ children }) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [position, setPosition] = useSettingsState(\r\n    \"sidebarPosition\",\r\n    SIDEBAR_POSITION.LEFT\r\n  );\r\n  const [behavior, setBehavior] = useSettingsState(\r\n    \"sidebarBehavior\",\r\n    SIDEBAR_BEHAVIOR.STICKY\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider\r\n      value={{\r\n        isOpen,\r\n        setIsOpen,\r\n        position,\r\n        setPosition,\r\n        behavior,\r\n        setBehavior,\r\n      }}\r\n    >\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n}\r\n\r\nexport { SidebarProvider, SidebarContext };\r\n"]},"metadata":{},"sourceType":"module"}