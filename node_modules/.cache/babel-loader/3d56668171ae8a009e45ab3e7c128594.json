{"ast":null,"code":"import _objectSpread from \"/home/dkirchan/timikat2/timikat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/dkirchan/timikat2/timikat/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/dkirchan/timikat2/timikat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/dkirchan/timikat2/timikat/src/pages/tables/ColumnFiltering.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this2 = this,\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\nimport { Card, Container, Table, Form } from \"react-bootstrap\";\nimport { tableData } from \"./data.js\"; // This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NumberRangeColumnFilter(_ref) {\n  _s();\n\n  var _ref$column = _ref.column,\n      _ref$column$filterVal = _ref$column.filterValue,\n      filterValue = _ref$column$filterVal === void 0 ? [] : _ref$column$filterVal,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter,\n      id = _ref$column.id;\n\n  var _React$useMemo = React.useMemo(function () {\n    var min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    var max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach(function (row) {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      min = _React$useMemo2[0],\n      max = _React$useMemo2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[0] || \"\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        var val = e.target.value;\n        setFilter(function () {\n          var old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [val ? parseInt(val, 10) : undefined, old[1]];\n        });\n      },\n      placeholder: \"Min (\".concat(min, \")\"),\n      style: {\n        width: \"110px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mx-2 mt-1\",\n      children: \"to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[1] || \"\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        var val = e.target.value;\n        setFilter(function () {\n          var old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [old[0], val ? parseInt(val, 10) : undefined];\n        });\n      },\n      placeholder: \"Max (\".concat(max, \")\"),\n      style: {\n        width: \"110px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_s(NumberRangeColumnFilter, \"JjGt0968bxIn2DIWJAwn7XKKSys=\");\n\n_c = NumberRangeColumnFilter;\n\nfunction SelectColumnFilter(_ref2) {\n  _s2();\n\n  var _this = this;\n\n  var _ref2$column = _ref2.column,\n      filterValue = _ref2$column.filterValue,\n      setFilter = _ref2$column.setFilter,\n      preFilteredRows = _ref2$column.preFilteredRows,\n      id = _ref2$column.id;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  var options = React.useMemo(function () {\n    var options = new Set();\n    preFilteredRows.forEach(function (row) {\n      options.add(row.values[id]);\n    });\n    return _toConsumableArray(options.values());\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(Form.Select, {\n    value: filterValue,\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), options.map(function (option, i) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c2 = SelectColumnFilter;\n\nfunction DefaultColumnFilter(_ref3) {\n  var _ref3$column = _ref3.column,\n      filterValue = _ref3$column.filterValue,\n      preFilteredRows = _ref3$column.preFilteredRows,\n      setFilter = _ref3$column.setFilter;\n  var count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(Form.Control, {\n    value: filterValue || \"\",\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"Search \".concat(count, \" records...\"),\n    className: \"mt-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = DefaultColumnFilter;\n\nvar ColumnFilteringTable = function ColumnFilteringTable(_ref4) {\n  _s3();\n\n  var columns = _ref4.columns,\n      data = _ref4.data;\n  var filterTypes = React.useMemo(function () {\n    return {\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    // Be sure to pass the defaultColumn option\n    filterTypes: filterTypes\n  }, useFilters, // useFilters!\n  useGlobalFilter // useGlobalFilter!\n  ),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Column Filtering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this2), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Column filtering by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, _this2), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                  children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: column.canFilter ? column.render(\"Filter\") : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, _this2)]\n                }), void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, _this2);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, _this2), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: rows.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, _this2);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, _this2);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, _this2)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, _this2);\n};\n\n_s3(ColumnFilteringTable, \"Ww+84E1Vh4YMPArZoHhPX3j+d1g=\", false, function () {\n  return [useTable];\n});\n\n_c4 = ColumnFilteringTable;\nvar tableColumns = [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Position\",\n  accessor: \"position\",\n  Filter: SelectColumnFilter,\n  filter: \"includes\"\n}, {\n  Header: \"Office\",\n  accessor: \"office\",\n  Filter: SelectColumnFilter,\n  filter: \"includes\"\n}, {\n  Header: \"Age\",\n  accessor: \"age\",\n  Filter: NumberRangeColumnFilter,\n  filter: \"between\"\n}, {\n  Header: \"Start Date\",\n  accessor: \"startDate\"\n}, {\n  Header: \"Salary\",\n  accessor: \"salary\",\n  Filter: false\n}];\n\nvar ColumnFiltering = function ColumnFiltering() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Column Filtering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }, _this2), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Column Filtering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, _this2), /*#__PURE__*/_jsxDEV(ColumnFilteringTable, {\n        columns: tableColumns,\n        data: tableData.slice(0, 15)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 3\n  }, _this2);\n};\n\n_c5 = ColumnFiltering;\nexport default ColumnFiltering;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NumberRangeColumnFilter\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"DefaultColumnFilter\");\n$RefreshReg$(_c4, \"ColumnFilteringTable\");\n$RefreshReg$(_c5, \"ColumnFiltering\");","map":{"version":3,"sources":["/home/dkirchan/timikat2/timikat/src/pages/tables/ColumnFiltering.js"],"names":["React","Helmet","useTable","useFilters","useGlobalFilter","Card","Container","Table","Form","tableData","NumberRangeColumnFilter","column","filterValue","preFilteredRows","setFilter","id","useMemo","min","length","values","max","forEach","row","Math","e","val","target","value","old","parseInt","undefined","width","SelectColumnFilter","options","Set","add","map","option","i","DefaultColumnFilter","count","ColumnFilteringTable","columns","data","filterTypes","text","rows","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","getRowProps","cells","cell","getCellProps","tableColumns","Header","accessor","ColumnFiltering","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\r\n\r\nimport { Card, Container, Table, Form } from \"react-bootstrap\";\r\n\r\nimport { tableData } from \"./data.js\";\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    preFilteredRows.forEach((row) => {\r\n      min = Math.min(row.values[id], min);\r\n      max = Math.max(row.values[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <div className=\"d-flex mt-2\">\r\n      <Form.Control\r\n        value={filterValue[0] || \"\"}\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          const val = e.target.value;\r\n          setFilter((old = []) => [\r\n            val ? parseInt(val, 10) : undefined,\r\n            old[1],\r\n          ]);\r\n        }}\r\n        placeholder={`Min (${min})`}\r\n        style={{\r\n          width: \"110px\",\r\n        }}\r\n      />\r\n      <span className=\"mx-2 mt-1\">to</span>\r\n      <Form.Control\r\n        value={filterValue[1] || \"\"}\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          const val = e.target.value;\r\n          setFilter((old = []) => [\r\n            old[0],\r\n            val ? parseInt(val, 10) : undefined,\r\n          ]);\r\n        }}\r\n        placeholder={`Max (${max})`}\r\n        style={{\r\n          width: \"110px\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <Form.Select\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <Form.Control\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n      className=\"mt-2\"\r\n    />\r\n  );\r\n}\r\n\r\nconst ColumnFilteringTable = ({ columns, data }) => {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn, // Be sure to pass the defaultColumn option\r\n        filterTypes,\r\n      },\r\n      useFilters, // useFilters!\r\n      useGlobalFilter // useGlobalFilter!\r\n    );\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Column Filtering</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Column filtering by react-table\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Table striped bordered {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                    {/* Render the columns filter UI */}\r\n                    <div>\r\n                      {column.canFilter ? column.render(\"Filter\") : null}\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst tableColumns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\",\r\n  },\r\n  {\r\n    Header: \"Position\",\r\n    accessor: \"position\",\r\n    Filter: SelectColumnFilter,\r\n    filter: \"includes\",\r\n  },\r\n  {\r\n    Header: \"Office\",\r\n    accessor: \"office\",\r\n    Filter: SelectColumnFilter,\r\n    filter: \"includes\",\r\n  },\r\n  {\r\n    Header: \"Age\",\r\n    accessor: \"age\",\r\n    Filter: NumberRangeColumnFilter,\r\n    filter: \"between\",\r\n  },\r\n  {\r\n    Header: \"Start Date\",\r\n    accessor: \"startDate\",\r\n  },\r\n  {\r\n    Header: \"Salary\",\r\n    accessor: \"salary\",\r\n    Filter: false,\r\n  },\r\n];\r\n\r\nconst ColumnFiltering = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Column Filtering\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Column Filtering</h1>\r\n\r\n      <ColumnFilteringTable\r\n        columns={tableColumns}\r\n        data={tableData.slice(0, 15)}\r\n      />\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ColumnFiltering;\r\n"]},"metadata":{},"sourceType":"module"}