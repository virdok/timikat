{"ast":null,"code":"import _asyncToGenerator from \"/home/dkirchan/timikat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _jsxFileName = \"/home/dkirchan/timikat/src/components/auth/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/dkirchan/timikat/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  var _this = this;\n\n  var navigate = useNavigate();\n\n  var _useAuth = useAuth(),\n      resetPassword = _useAuth.resetPassword;\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      submit: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setErrors, setStatus, setSubmitting, message;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n\n                try {\n                  resetPassword(values.email);\n                  navigate(\"/auth/sign-in\");\n                } catch (error) {\n                  message = error.message || \"Something went wrong\";\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: message\n                  });\n                  setSubmitting(false);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: function children(_ref3) {\n      var errors = _ref3.errors,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          isSubmitting = _ref3.isSubmitting,\n          touched = _ref3.touched,\n          values = _ref3.values;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [errors.submit && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"my-3\",\n          variant: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-message\",\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            label: \"Email Address\",\n            value: values.email,\n            isInvalid: Boolean(touched.email && errors.email),\n            onBlur: handleBlur,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this), !!touched.email && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            size: \"lg\",\n            disabled: isSubmitting,\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"rChDAI1Y7Ia/e7J0rU6kW2dS89Q=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/components/auth/ResetPassword.js"],"names":["React","useNavigate","Yup","Formik","Alert","Button","Form","useAuth","ResetPassword","navigate","resetPassword","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","error","message","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nfunction ResetPassword() {\r\n  const navigate = useNavigate();\r\n  const { resetPassword } = useAuth();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        submit: false,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Must be a valid email\")\r\n          .max(255)\r\n          .required(\"Email is required\"),\r\n      })}\r\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          resetPassword(values.email);\r\n          navigate(\"/auth/sign-in\");\r\n        } catch (error) {\r\n          const message = error.message || \"Something went wrong\";\r\n\r\n          setStatus({ success: false });\r\n          setErrors({ submit: message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          {errors.submit && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              <div className=\"alert-message\">{errors.submit}</div>\r\n            </Alert>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              value={values.email}\r\n              isInvalid={Boolean(touched.email && errors.email)}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n            {!!touched.email && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n          <div className=\"text-center mt-3\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Reset password\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}