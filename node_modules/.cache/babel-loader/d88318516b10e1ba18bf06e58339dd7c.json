{"ast":null,"code":"import _slicedToArray from \"/home/dkirchan/timikat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/dkirchan/timikat/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/home/dkirchan/timikat/src/pages/ui/Modals.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Button, Card, Col, Container, Modal, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar colors = [{\n  name: \"Primary\",\n  value: \"primary\"\n}, {\n  name: \"Success\",\n  value: \"success\"\n}, {\n  name: \"Danger\",\n  value: \"danger\"\n}, {\n  name: \"Warning\",\n  value: \"warning\"\n}];\nvar sizes = [{\n  name: \"Small\",\n  value: \"sm\"\n}, {\n  name: \"Medium\",\n  value: \"md\"\n}, {\n  name: \"Large\",\n  value: \"lg\"\n}];\n\nvar DefaultModal = function DefaultModal() {\n  _s();\n\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState = useState(function () {\n    return initOpenModals();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      openModals = _useState2[0],\n      setOpenModals = _useState2[1];\n\n  var toggle = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Default modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Default Bootstrap modal.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), colors.map(function (color, index) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: color.value,\n            onClick: function onClick() {\n              return toggle(index);\n            },\n            className: \"me-1\",\n            children: color.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: openModals[index],\n            onHide: function onHide() {\n              return toggle(index);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: \"Modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              className: \"text-center m-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, _this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: color.value,\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DefaultModal, \"It4FSwgUnsM9c7WSnDzZ8g5WYuM=\");\n\n_c = DefaultModal;\n\nvar ColoredModal = function ColoredModal() {\n  _s2();\n\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState3 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openModals = _useState4[0],\n      setOpenModals = _useState4[1];\n\n  var toggle = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Colored modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Colored Bootstrap modal.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, _this), colors.map(function (color, index) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: color.value,\n            onClick: function onClick() {\n              return toggle(index);\n            },\n            className: \"me-1\",\n            children: color.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: openModals[index],\n            onHide: function onHide() {\n              return toggle(index);\n            },\n            className: \"modal-colored modal-\" + color.value,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              className: \"text-white\",\n              children: \"Colored modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              className: \"text-center m-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0 text-white\",\n                children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, _this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ColoredModal, \"It4FSwgUnsM9c7WSnDzZ8g5WYuM=\");\n\n_c2 = ColoredModal;\n\nvar CenteredModal = function CenteredModal() {\n  _s3();\n\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState5 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openModals = _useState6[0],\n      setOpenModals = _useState6[1];\n\n  var toggle = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Centered modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Vertically centered modal.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, _this), colors.map(function (color, index) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: color.value,\n            onClick: function onClick() {\n              return toggle(index);\n            },\n            className: \"me-1\",\n            children: color.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: openModals[index],\n            onHide: function onHide() {\n              return toggle(index);\n            },\n            centered: true,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: \"Centered modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              className: \"text-center m-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, _this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: color.value,\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, _this);\n};\n\n_s3(CenteredModal, \"It4FSwgUnsM9c7WSnDzZ8g5WYuM=\");\n\n_c3 = CenteredModal;\n\nvar ModalSizes = function ModalSizes() {\n  _s4();\n\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    sizes.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState7 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      openModals = _useState8[0],\n      setOpenModals = _useState8[1];\n\n  var toggle = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Modal sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"These sizes kick in at certain breakpoints to avoid scrollbars on smaller viewports.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, _this), sizes.map(function (size, index) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: function onClick() {\n              return toggle(index);\n            },\n            className: \"me-1\",\n            children: size.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: openModals[index],\n            onHide: function onHide() {\n              return toggle(index);\n            },\n            size: size.value,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: [size.name, \" modal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              className: \"text-center m-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, _this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: function onClick() {\n                  return toggle(index);\n                },\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, _this);\n};\n\n_s4(ModalSizes, \"It4FSwgUnsM9c7WSnDzZ8g5WYuM=\");\n\n_c4 = ModalSizes;\n\nvar Modals = function Modals() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Modals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Modals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(DefaultModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(ColoredModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(CenteredModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(ModalSizes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 3\n  }, _this);\n};\n\n_c5 = Modals;\nexport default Modals;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DefaultModal\");\n$RefreshReg$(_c2, \"ColoredModal\");\n$RefreshReg$(_c3, \"CenteredModal\");\n$RefreshReg$(_c4, \"ModalSizes\");\n$RefreshReg$(_c5, \"Modals\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/ui/Modals.js"],"names":["React","useState","Helmet","Button","Card","Col","Container","Modal","Row","colors","name","value","sizes","DefaultModal","initOpenModals","modals","forEach","color","index","Object","assign","openModals","setOpenModals","toggle","map","ColoredModal","CenteredModal","ModalSizes","size","Modals"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,KAAvC,EAA8CC,GAA9C,QAAyD,iBAAzD;;AAEA,IAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADa,EAKb;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALa,EASb;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATa,EAab;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAba,CAAf;AAmBA,IAAMC,KAAK,GAAG,CACZ;AACEF,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,CAAd;;AAeA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,MAAM,GAAG,EAAb;AAEAN,IAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/BH,MAAAA,MAAM,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,sBAA6BG,KAA7B,EAAqC,KAArC,EAAT;AACD,KAFD;AAIA,WAAOH,MAAP;AACD,GARD;;AAUA,kBAAoCd,QAAQ,CAAC;AAAA,WAAMa,cAAc,EAApB;AAAA,GAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAW;AACxB;AACAI,IAAAA,aAAa,CAAC,UAACD,UAAD;AAAA,aACZF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,sBAAiCH,KAAjC,EAAyC,CAACG,UAAU,CAACH,KAAD,CAApD,EADY;AAAA,KAAD,CAAb;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAMGT,MAAM,CAACe,GAAP,CAAW,UAACP,KAAD,EAAQC,KAAR;AAAA,4BACV,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAED,KAAK,CAACN,KADjB;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFX;AAGE,YAAA,SAAS,EAAC,MAHZ;AAAA,sBAKGD,KAAK,CAACP;AALT;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEW,UAAU,CAACH,KAAD,CAAvB;AAAgC,YAAA,MAAM,EAAE;AAAA,qBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,aAAxC;AAAA,oCACE,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAY,cAAA,SAAS,EAAC,iBAAtB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAFF,eASE,QAAC,KAAD,CAAO,MAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAE;AAAA,yBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGY,GAHZ,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAED,KAAK,CAACN,KAAvB;AAA8B,gBAAA,OAAO,EAAE;AAAA,yBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4CD,CAhED;;GAAML,Y;;KAAAA,Y;;AAkEN,IAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMX,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,MAAM,GAAG,EAAb;AAEAN,IAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/BH,MAAAA,MAAM,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,sBAA6BG,KAA7B,EAAqC,KAArC,EAAT;AACD,KAFD;AAIA,WAAOH,MAAP;AACD,GARD;;AAUA,mBAAoCd,QAAQ,CAAC;AAAA,WAAMa,cAAc,EAApB;AAAA,GAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAW;AACxB;AACAI,IAAAA,aAAa,CAAC,UAACD,UAAD;AAAA,aACZF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,sBAAiCH,KAAjC,EAAyC,CAACG,UAAU,CAACH,KAAD,CAApD,EADY;AAAA,KAAD,CAAb;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAMGT,MAAM,CAACe,GAAP,CAAW,UAACP,KAAD,EAAQC,KAAR;AAAA,4BACV,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAED,KAAK,CAACN,KADjB;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFX;AAGE,YAAA,SAAS,EAAC,MAHZ;AAAA,sBAKGD,KAAK,CAACP;AALT;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEW,UAAU,CAACH,KAAD,CADlB;AAEE,YAAA,MAAM,EAAE;AAAA,qBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFV;AAGE,YAAA,SAAS,EAAE,yBAAyBD,KAAK,CAACN,KAH5C;AAAA,oCAKE,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAA0B,cAAA,SAAS,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,eAQE,QAAC,KAAD,CAAO,IAAP;AAAY,cAAA,SAAS,EAAC,iBAAtB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBARF,eAeE,QAAC,KAAD,CAAO,MAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,OAAhB;AAAwB,gBAAA,OAAO,EAAE;AAAA,yBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGY,GAHZ,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,OAAhB;AAAwB,gBAAA,OAAO,EAAE;AAAA,yBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkDD,CAtED;;IAAMO,Y;;MAAAA,Y;;AAwEN,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,MAAMZ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,MAAM,GAAG,EAAb;AAEAN,IAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/BH,MAAAA,MAAM,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,sBAA6BG,KAA7B,EAAqC,KAArC,EAAT;AACD,KAFD;AAIA,WAAOH,MAAP;AACD,GARD;;AAUA,mBAAoCd,QAAQ,CAAC;AAAA,WAAMa,cAAc,EAApB;AAAA,GAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAW;AACxB;AACAI,IAAAA,aAAa,CAAC,UAACD,UAAD;AAAA,aACZF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,sBAAiCH,KAAjC,EAAyC,CAACG,UAAU,CAACH,KAAD,CAApD,EADY;AAAA,KAAD,CAAb;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAMGT,MAAM,CAACe,GAAP,CAAW,UAACP,KAAD,EAAQC,KAAR;AAAA,4BACV,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAED,KAAK,CAACN,KADjB;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFX;AAGE,YAAA,SAAS,EAAC,MAHZ;AAAA,sBAKGD,KAAK,CAACP;AALT;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEW,UAAU,CAACH,KAAD,CADlB;AAEE,YAAA,MAAM,EAAE;AAAA,qBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFV;AAGE,YAAA,QAAQ,MAHV;AAAA,oCAKE,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,eAME,QAAC,KAAD,CAAO,IAAP;AAAY,cAAA,SAAS,EAAC,iBAAtB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBANF,eAaE,QAAC,KAAD,CAAO,MAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAE;AAAA,yBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGY,GAHZ,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAED,KAAK,CAACN,KAAvB;AAA8B,gBAAA,OAAO,EAAE;AAAA,yBAAMY,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgDD,CApED;;IAAMQ,a;;MAAAA,a;;AAsEN,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMb,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,MAAM,GAAG,EAAb;AAEAH,IAAAA,KAAK,CAACI,OAAN,CAAc,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9BH,MAAAA,MAAM,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,sBAA6BG,KAA7B,EAAqC,KAArC,EAAT;AACD,KAFD;AAIA,WAAOH,MAAP;AACD,GARD;;AAUA,mBAAoCd,QAAQ,CAAC;AAAA,WAAMa,cAAc,EAApB;AAAA,GAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAW;AACxB;AACAI,IAAAA,aAAa,CAAC,UAACD,UAAD;AAAA,aACZF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,sBAAiCH,KAAjC,EAAyC,CAACG,UAAU,CAACH,KAAD,CAApD,EADY;AAAA,KAAD,CAAb;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAMGN,KAAK,CAACY,GAAN,CAAU,UAACI,IAAD,EAAOV,KAAP;AAAA,4BACT,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,SADV;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFX;AAGE,YAAA,SAAS,EAAC,MAHZ;AAAA,sBAKGU,IAAI,CAAClB;AALR;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEW,UAAU,CAACH,KAAD,CADlB;AAEE,YAAA,MAAM,EAAE;AAAA,qBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,aAFV;AAGE,YAAA,IAAI,EAAEU,IAAI,CAACjB,KAHb;AAAA,oCAKE,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA,yBAA2BiB,IAAI,CAAClB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,eAME,QAAC,KAAD,CAAO,IAAP;AAAY,cAAA,SAAS,EAAC,iBAAtB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBANF,eAaE,QAAC,KAAD,CAAO,MAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAE;AAAA,yBAAMa,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGY,GAHZ,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,OAAO,EAAE;AAAA,yBAAMK,MAAM,CAACL,KAAD,CAAZ;AAAA,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmDD,CAvED;;IAAMS,U;;MAAAA,U;;AAyEN,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA,sBACb,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF,eAOE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAPF,eAUE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAf;;MAAMA,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport { Button, Card, Col, Container, Modal, Row } from \"react-bootstrap\";\r\n\r\nconst colors = [\r\n  {\r\n    name: \"Primary\",\r\n    value: \"primary\",\r\n  },\r\n  {\r\n    name: \"Success\",\r\n    value: \"success\",\r\n  },\r\n  {\r\n    name: \"Danger\",\r\n    value: \"danger\",\r\n  },\r\n  {\r\n    name: \"Warning\",\r\n    value: \"warning\",\r\n  },\r\n];\r\n\r\nconst sizes = [\r\n  {\r\n    name: \"Small\",\r\n    value: \"sm\",\r\n  },\r\n  {\r\n    name: \"Medium\",\r\n    value: \"md\",\r\n  },\r\n  {\r\n    name: \"Large\",\r\n    value: \"lg\",\r\n  },\r\n];\r\n\r\nconst DefaultModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, { [index]: false });\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = (index) => {\r\n    // Toggle selected element\r\n    setOpenModals((openModals) =>\r\n      Object.assign({}, openModals, { [index]: !openModals[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Default modal</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">Default Bootstrap modal.</h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              variant={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"me-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal show={openModals[index]} onHide={() => toggle(index)}>\r\n              <Modal.Header closeButton>Modal</Modal.Header>\r\n              <Modal.Body className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to your\r\n                  site for lightboxes, user notifications, or completely custom\r\n                  content.\r\n                </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button variant={color.value} onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ColoredModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, { [index]: false });\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = (index) => {\r\n    // Toggle selected element\r\n    setOpenModals((openModals) =>\r\n      Object.assign({}, openModals, { [index]: !openModals[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Colored modal</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">Colored Bootstrap modal.</h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              variant={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"me-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal\r\n              show={openModals[index]}\r\n              onHide={() => toggle(index)}\r\n              className={\"modal-colored modal-\" + color.value}\r\n            >\r\n              <Modal.Header closeButton className=\"text-white\">\r\n                Colored modal\r\n              </Modal.Header>\r\n              <Modal.Body className=\"text-center m-3\">\r\n                <p className=\"mb-0 text-white\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to your\r\n                  site for lightboxes, user notifications, or completely custom\r\n                  content.\r\n                </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"light\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button variant=\"light\" onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst CenteredModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, { [index]: false });\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = (index) => {\r\n    // Toggle selected element\r\n    setOpenModals((openModals) =>\r\n      Object.assign({}, openModals, { [index]: !openModals[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Centered modal</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">Vertically centered modal.</h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              variant={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"me-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal\r\n              show={openModals[index]}\r\n              onHide={() => toggle(index)}\r\n              centered\r\n            >\r\n              <Modal.Header closeButton>Centered modal</Modal.Header>\r\n              <Modal.Body className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to your\r\n                  site for lightboxes, user notifications, or completely custom\r\n                  content.\r\n                </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button variant={color.value} onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ModalSizes = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    sizes.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, { [index]: false });\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = (index) => {\r\n    // Toggle selected element\r\n    setOpenModals((openModals) =>\r\n      Object.assign({}, openModals, { [index]: !openModals[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Modal sizes</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          These sizes kick in at certain breakpoints to avoid scrollbars on\r\n          smaller viewports.\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {sizes.map((size, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => toggle(index)}\r\n              className=\"me-1\"\r\n            >\r\n              {size.name}\r\n            </Button>\r\n            <Modal\r\n              show={openModals[index]}\r\n              onHide={() => toggle(index)}\r\n              size={size.value}\r\n            >\r\n              <Modal.Header closeButton>{size.name} modal</Modal.Header>\r\n              <Modal.Body className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to your\r\n                  site for lightboxes, user notifications, or completely custom\r\n                  content.\r\n                </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button variant=\"primary\" onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Modals = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Modals\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Modals</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <DefaultModal />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ColoredModal />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <CenteredModal />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ModalSizes />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Modals;\r\n"]},"metadata":{},"sourceType":"module"}