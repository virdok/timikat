{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/pages/forms/Formik.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Button, Card, Container, Col, Row, Form, InputGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar schema = Yup.object().shape({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  username: Yup.string().required(),\n  city: Yup.string().required(),\n  state: Yup.string().required(),\n  zip: Yup.string().required()\n});\n\nvar FormikExample = function FormikExample() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        tag: \"h5\",\n        children: \"Formik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Formik example with Yup validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: console.log,\n        initialValues: {\n          firstName: \"Mark\",\n          lastName: \"Otto\",\n          username: \"\",\n          city: \"\",\n          state: \"\",\n          zip: \"\",\n          terms: false\n        },\n        children: function children(_ref) {\n          var handleSubmit = _ref.handleSubmit,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur,\n              values = _ref.values,\n              touched = _ref.touched,\n              isValid = _ref.isValid,\n              errors = _ref.errors;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik01\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"First name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"firstName\",\n                  value: values.firstName,\n                  onChange: handleChange,\n                  isValid: touched.firstName && !errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: \"Looks good!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik02\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"lastName\",\n                  value: values.lastName,\n                  onChange: handleChange,\n                  isValid: touched.lastName && !errors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: \"Looks good!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormikUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  hasValidation: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"inputGroupPrepend\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 19\n                  }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Username\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    name: \"username\",\n                    value: values.username,\n                    onChange: handleChange,\n                    isInvalid: !!errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 19\n                  }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik03\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"City\",\n                  name: \"city\",\n                  value: values.city,\n                  onChange: handleChange,\n                  isInvalid: !!errors.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"3\",\n                controlId: \"validationFormik04\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"State\",\n                  name: \"state\",\n                  value: values.state,\n                  onChange: handleChange,\n                  isInvalid: !!errors.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"3\",\n                controlId: \"validationFormik05\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Zip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Zip\",\n                  name: \"zip\",\n                  value: values.zip,\n                  onChange: handleChange,\n                  isInvalid: !!errors.zip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.zip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = FormikExample;\n\nvar FormikPage = function FormikPage() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Formik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(FormikExample, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = FormikPage;\nexport default FormikPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormikExample\");\n$RefreshReg$(_c2, \"FormikPage\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/forms/Formik.js"],"names":["React","Helmet","Yup","Formik","Button","Card","Container","Col","Row","Form","InputGroup","schema","object","shape","firstName","string","required","lastName","username","city","state","zip","FormikExample","console","log","terms","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","FormikPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\n\r\nconst schema = Yup.object().shape({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  username: Yup.string().required(),\r\n  city: Yup.string().required(),\r\n  state: Yup.string().required(),\r\n  zip: Yup.string().required(),\r\n});\r\n\r\nconst FormikExample = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title tag=\"h5\">Formik</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Formik example with Yup validation\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={console.log}\r\n        initialValues={{\r\n          firstName: \"Mark\",\r\n          lastName: \"Otto\",\r\n          username: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          zip: \"\",\r\n          terms: false,\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  isValid={touched.firstName && !errors.firstName}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  isValid={touched.lastName && !errors.lastName}\r\n                />\r\n\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    name=\"username\"\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  name=\"city\"\r\n                  value={values.city}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.city}\r\n                />\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.city}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"State\"\r\n                  name=\"state\"\r\n                  value={values.state}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.state}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.state}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Zip\"\r\n                  name=\"zip\"\r\n                  value={values.zip}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.zip}\r\n                />\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.zip}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst FormikPage = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Formik\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Formik</h1>\r\n\r\n      <FormikExample />\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default FormikPage;\r\n"]},"metadata":{},"sourceType":"module"}