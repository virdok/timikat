{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/pages/docs/ESLintAndPrettier.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Intro = function Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"To format code automatically, we've included a basic ESLint & Prettier configuration. ESLint statically analyzes your code to quickly find problems. Prettier is used to automatically format the code you write to ensure a consistent code style withing your projects.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Included ESLint configuration:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"{\\n  \\\"extends\\\": [\\\"react-app\\\", \\\"prettier\\\"],\\n  \\\"plugins\\\": [\\\"prettier\\\"],\\n  \\\"rules\\\": {\\n    \\\"prettier/prettier\\\": \\\"error\\\"\\n  }\\n}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Intro;\n\nvar Usage = function Usage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Usage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Format all source files in the /src folder:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm run lint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = Usage;\n\nvar VSCodeIntegration = function VSCodeIntegration() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"VSCode integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"To use ESLint & Prettier in combination with VSCode, we suggest installing the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        href: \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\",\n        children: \"VSCode ESLint extension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, _this), \". After installing the extension, the code will automatically be formatted. The following configuration is included, which can be enabled/disabled or adjusted to your needs.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"{\\n  \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\",\\n  \\\"editor.formatOnType\\\": true,\\n  \\\"editor.formatOnSave\\\": true,\\n  \\\"editor.formatOnPaste\\\": true,\\n  \\\"editor.codeActionsOnSave\\\": {\\n    \\\"source.fixAll.eslint\\\": true\\n  }\\n}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, _this);\n};\n\n_c3 = VSCodeIntegration;\n\nvar ESLintAndPrettier = function ESLintAndPrettier() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          xl: 8,\n          className: \"col-xxl-7 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ESLint & Prettier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Usage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(VSCodeIntegration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, _this);\n};\n\n_c4 = ESLintAndPrettier;\nexport default ESLintAndPrettier;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Usage\");\n$RefreshReg$(_c3, \"VSCodeIntegration\");\n$RefreshReg$(_c4, \"ESLintAndPrettier\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/docs/ESLintAndPrettier.js"],"names":["React","Helmet","Col","Container","Row","Code","Intro","Usage","VSCodeIntegration","ESLintAndPrettier"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACZ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAQE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,eAUE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,CAAd;;KAAMA,K;;AAqBN,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACZ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,CAAd;;MAAMA,K;;AASN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,sBACxB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA,mGAEM,GAFN,eAGE;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,GAAG,EAAC,qBAFN;AAGE,QAAA,IAAI,EAAC,4EAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAiBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADwB;AAAA,CAA1B;;MAAMA,iB;;AA8BN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,sBACxB,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,mBAA9B;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADwB;AAAA,CAA1B;;MAAMA,iB;AAiBN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      To format code automatically, we've included a basic ESLint & Prettier\r\n      configuration. ESLint statically analyzes your code to quickly find\r\n      problems. Prettier is used to automatically format the code you write to\r\n      ensure a consistent code style withing your projects.\r\n    </p>\r\n    <p className=\"text-lg\">Included ESLint configuration:</p>\r\n\r\n    <Code>{`{\r\n  \"extends\": [\"react-app\", \"prettier\"],\r\n  \"plugins\": [\"prettier\"],\r\n  \"rules\": {\r\n    \"prettier/prettier\": \"error\"\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst Usage = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Usage</h3>\r\n    <p className=\"text-lg\">Format all source files in the /src folder:</p>\r\n\r\n    <Code>npm run lint</Code>\r\n  </div>\r\n);\r\n\r\nconst VSCodeIntegration = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>VSCode integration</h3>\r\n    <p className=\"text-lg\">\r\n      To use ESLint & Prettier in combination with VSCode, we suggest installing\r\n      the{\" \"}\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\r\n      >\r\n        VSCode ESLint extension\r\n      </a>\r\n      . After installing the extension, the code will automatically be\r\n      formatted. The following configuration is included, which can be\r\n      enabled/disabled or adjusted to your needs.\r\n    </p>\r\n\r\n    <Code>{`{\r\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n  \"editor.formatOnType\": true,\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.formatOnPaste\": true,\r\n  \"editor.codeActionsOnSave\": {\r\n    \"source.fixAll.eslint\": true\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst ESLintAndPrettier = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Support\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>ESLint &amp; Prettier</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <Usage />\r\n          <VSCodeIntegration />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ESLintAndPrettier;\r\n"]},"metadata":{},"sourceType":"module"}