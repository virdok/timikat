{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/pages/docs/Deployment.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Intro = function Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"npm run build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, _this), \" creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served index.html, and requests to static paths like\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"/static/js/main.<hash>.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, _this), \" are served with the contents of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"/static/js/main.<hash>.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this), \" file.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Intro;\n\nvar StaticServer = function StaticServer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Static Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"For environments using\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://nodejs.org/en/\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, _this), \", the easiest way to handle this would be to install\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/zeit/serve\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this), \" \", \"and let it handle the rest:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm install -g serve\\nserve -s build\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"The last command shown above will serve your static site on the port 5000. Like many of\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/vercel/serve\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, _this), \"\\u2019s internal settings, the port can be adjusted using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"-l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 64\n      }, _this), \" \", \"or \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"--listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, _this), \" flags:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"serve -s build -l 4000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Run this command to get a full list of the options available:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"serve -h\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = StaticServer;\n\nvar OtherSolutions = function OtherSolutions() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Other Solutions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"You don\\u2019t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, _this);\n};\n\n_c3 = OtherSolutions;\n\nvar Express = function Express() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Express\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Express is a fast, unopinionated, minimalist web framework for Node.js. Here\\u2019s a programmatic example:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"const express = require('express');\\nconst path = require('path');\\nconst app = express();\\napp.use(express.static(path.join(__dirname, 'build')));\\napp.get('/', function(req, res) {\\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\\n});\\napp.listen(9000);\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, _this);\n};\n\n_c4 = Express;\n\nvar Netlify = function Netlify() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Netlify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Deploy modern static websites with Netlify. Get CDN, Continuous deployment, 1-click HTTPS, and all the services you need.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"To do a manual deploy to Netlify\\u2019s CDN:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm install netlify-cli -g\\nnetlify deploy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"Choose \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, _this), \" as the path to deploy.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"To setup continuous delivery:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, _this), \"With this setup Netlify will build and deploy when you push to git or open a pull request:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://app.netlify.com/signup\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Start a new netlify project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Pick your Git hosting service and select your repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Click \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Build your site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, _this);\n};\n\n_c5 = Netlify;\n\nvar Deployment = function Deployment() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Deployment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          xl: 8,\n          className: \"col-xxl-7 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Deployment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(StaticServer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(OtherSolutions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Express, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Netlify, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 3\n  }, _this);\n};\n\n_c6 = Deployment;\nexport default Deployment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"StaticServer\");\n$RefreshReg$(_c3, \"OtherSolutions\");\n$RefreshReg$(_c4, \"Express\");\n$RefreshReg$(_c5, \"Netlify\");\n$RefreshReg$(_c6, \"Deployment\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/pages/docs/Deployment.js"],"names":["React","Helmet","Col","Container","Row","Code","Intro","StaticServer","OtherSolutions","Express","Netlify","Deployment"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      <code>npm run build</code> creates a build directory with a production\r\n      build of your app. Set up your favorite HTTP server so that a visitor to\r\n      your site is served index.html, and requests to static paths like{\" \"}\r\n      <code>{`/static/js/main.<hash>.js`}</code> are served with the contents of\r\n      the <code>{`/static/js/main.<hash>.js`}</code> file.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst StaticServer = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Static Server</h3>\r\n    <p className=\"text-lg\">\r\n      For environments using{\" \"}\r\n      <a\r\n        href=\"https://nodejs.org/en/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        Node\r\n      </a>\r\n      , the easiest way to handle this would be to install{\" \"}\r\n      <a\r\n        href=\"https://github.com/zeit/serve\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        serve\r\n      </a>{\" \"}\r\n      and let it handle the rest:\r\n    </p>\r\n    <Code>{`npm install -g serve\r\nserve -s build`}</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      The last command shown above will serve your static site on the port 5000.\r\n      Like many of\r\n      <a\r\n        href=\"https://github.com/vercel/serve\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        serve\r\n      </a>\r\n      ’s internal settings, the port can be adjusted using the <code>-l</code>{\" \"}\r\n      or <code>--listen</code> flags:\r\n    </p>\r\n    <Code>serve -s build -l 4000</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Run this command to get a full list of the options available:\r\n    </p>\r\n    <Code>serve -h</Code>\r\n  </div>\r\n);\r\n\r\nconst OtherSolutions = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Other Solutions</h3>\r\n    <p className=\"text-lg\">\r\n      You don’t necessarily need a static server in order to run a Create React\r\n      App project in production. It also works well when integrated into an\r\n      existing server side app.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Express = () => (\r\n  <div className=\"mb-5\">\r\n    <h4>Express</h4>\r\n    <p className=\"text-lg\">\r\n      Express is a fast, unopinionated, minimalist web framework for Node.js.\r\n      Here’s a programmatic example:\r\n    </p>\r\n    <Code>{`const express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\napp.use(express.static(path.join(__dirname, 'build')));\r\napp.get('/', function(req, res) {\r\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\r\n});\r\napp.listen(9000);`}</Code>\r\n  </div>\r\n);\r\n\r\nconst Netlify = () => (\r\n  <div className=\"mb-5\">\r\n    <h4>Netlify</h4>\r\n    <p className=\"text-lg\">\r\n      Deploy modern static websites with Netlify. Get CDN, Continuous\r\n      deployment, 1-click HTTPS, and all the services you need.\r\n    </p>\r\n    <p className=\"text-lg\">To do a manual deploy to Netlify’s CDN:</p>\r\n    <Code>{`npm install netlify-cli -g\r\nnetlify deploy`}</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Choose <code>build</code> as the path to deploy.\r\n    </p>\r\n    <p className=\"text-lg\">\r\n      To setup continuous delivery:\r\n      <br />\r\n      With this setup Netlify will build and deploy when you push to git or open\r\n      a pull request:\r\n    </p>\r\n    <ol className=\"text-lg\">\r\n      <li>\r\n        <a\r\n          href=\"https://app.netlify.com/signup\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Start a new netlify project\r\n        </a>\r\n      </li>\r\n      <li>Pick your Git hosting service and select your repository</li>\r\n      <li>\r\n        Click <code>Build your site</code>\r\n      </li>\r\n    </ol>\r\n  </div>\r\n);\r\n\r\nconst Deployment = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Deployment\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>Deployment</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <StaticServer />\r\n          <OtherSolutions />\r\n          <Express />\r\n          <Netlify />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Deployment;\r\n"]},"metadata":{},"sourceType":"module"}