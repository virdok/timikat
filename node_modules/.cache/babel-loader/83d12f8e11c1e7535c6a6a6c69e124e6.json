{"ast":null,"code":"var _jsxFileName = \"/home/dkirchan/timikat/src/components/guards/AuthGuard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\"; // For routes that can only be accessed by authenticated users\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthGuard(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useAuth = useAuth(),\n      isAuthenticated = _useAuth.isAuthenticated,\n      isInitialized = _useAuth.isInitialized;\n\n  if (isInitialized && !isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth/sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthGuard, \"iLf+YVdiRFoDLrAB04ZERgz1wPk=\", false, function () {\n  return [useAuth];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["/home/dkirchan/timikat/src/components/guards/AuthGuard.js"],"names":["React","Navigate","useAuth","AuthGuard","children","isAuthenticated","isInitialized"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;;;AACA,SAASC,SAAT,OAAiC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC/B,iBAA2CF,OAAO,EAAlD;AAAA,MAAQG,eAAR,YAAQA,eAAR;AAAA,MAAyBC,aAAzB,YAAyBA,aAAzB;;AAEA,MAAIA,aAAa,IAAI,CAACD,eAAtB,EAAuC;AACrC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARQD,S;UACoCD,O;;;KADpCC,S;AAUT,eAAeA,SAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// For routes that can only be accessed by authenticated users\r\nfunction AuthGuard({ children }) {\r\n  const { isAuthenticated, isInitialized } = useAuth();\r\n\r\n  if (isInitialized && !isAuthenticated) {\r\n    return <Navigate to=\"/auth/sign-in\" />;\r\n  }\r\n\r\n  return <React.Fragment>{children}</React.Fragment>;\r\n}\r\n\r\nexport default AuthGuard;\r\n"]},"metadata":{},"sourceType":"module"}